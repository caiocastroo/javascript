Boas práticas na programação:

1) Documentação
/**
 *Descrição do código (o que faz?)
 * @author Caio Castro Lima
 * @link htts://...
 */

2) código limpo
- Não abusar de comentários

3) Nomeação:
- Não usar caracteres especiais, espaços e acentos
- Nomes de arquivos, variáveis, funções deve ser escrita com primeira letra caixa baixa Iniciar com caixa alta (letra maiúscula) apenas em classes e modelos
- Definir nomes em relação com problema ser resolvido

4) Aliamento (identação do código)

5) Quanto menos código usado para o problema melhor! 

 ______________________________________________________________
Comandos de Terminal:

cls e clear (limpar a tela do terminal)
node -v (exibe a versao do node)
cd pasta (entrar na pasta)
cd .. (voltar)
node arquivo.js (executar um arquivo JavaScript)
dir ou pwd (listar os arquivos de diretórios)
seta para cima (repete os comandos)
ls (lista os diretorios)
<tab> (completa o comando)
______________________________________________________________
Vscode: Dicas
Combinação de teclas <alt><shift><f>  //aliamento

_________________________________________________________________________
JavaScript:

Caractéristicas
- Sentença e não linha de código
- ; é opcional
console,clear() //limpar a tela do console
console.log() //escrever no console
Podemos usar aspas " " ou ' ' 
Não podemos usar aspas diferente " ' ou ' "
Dica: Usar em "texto" aspas 
      Usar em bibliotecas ou caminhos 'apóstrofe'
_________________________________________________________________________
Operadores:

Observações:
- Regra de precedência 
- % (não calcula porcentagem e sim o resto da divisão)
Ex:
    |  3
 10 |_____
1     3
Comparadores de igualdade:
NÃO USAR == !=

Operadores Lógicos:
Dica:
______________________________________________________________
Estudo das Variáveis:
- String (caracteres)
- Numéricas (números)
- Boolenas (verdadeiro ou falso)

Obs: No JavaScript as Variáveis são dinâmicamente tipadas
const (criar uma constante)
 var ou let (criar uma variável)
 ATENÇÃO!!! Não usar o var

Tipagem dinámica 
No jS o tipo string é definido quando conteudo da variável estiver entre aspas ""

Variáveis númericas podem ser números inteiros e não inteiros
Obs , (virgula é um caractere e não número) se necessário converter a entrada de dados de "," para "." 
.replace ("," ".") 

na enterda de dados númericos via terminal ou formulário é necessário converter para números
Classe Number

 _______________________________________________________________
Git e Github
Material de Apoio:
https://youtu.be/FF1f4bKYhoo?si=LH4dZ7spdG2NjZ_i

Confugurando o Git
-instalar o git
abrir o git bash
git config --global user.name
git config --global user email do github

_________________________________________________________________________
NODE - plataforma para uso do js fora do browser(navegador)
|__ v8 (google chromium)
|__ biblioteca C / C++
|__ PACOTES npm (node packger manager)
npm ls (lista os pacotes)
npm i ou npm install (instalar um pacote)
npm r nome_do_pacote (remove um pacote)

pacote == módulo = biblioteca 
para usar um pacote é necessário fazer a importação no início do código (logo abaixo do cabeçalho)

______________________________________________________________
Algoritmo: "receita de Bolo"

exemplo 1: Obejtivo é calcular a média de 2 notas

          nota 1 + nota 2
média = __________________
                2 

Variáveis: nota1,nota2,media

Entrada: nota1,nota2
Processamento: media = (nota1 + nota2) / 2
Saída: media